expose:
  type: clusterIP
  tls:
    enabled: true
    certSource: auto
    auto:
      commonName: "harbor"
  clusterIP:
    name: harbor
    annotations: {}
    ports:
      httpPort: 80
      httpsPort: 443
      notaryPort: 4443
  nodePort:
    name: harbor
    ports:
      http:
        port: 80
        nodePort: 30002
      https:
        port: 443
        nodePort: 30003
      notary:
        port: 4443
        nodePort: 30004
  loadBalancer:
    name: harbor
    IP: ""
    ports:
      httpPort: 80
      httpsPort: 443
      notaryPort: 4443
    annotations: {}
    sourceRanges: []

externalURL: https://harbor.lab.k8s.io


internalTLS:
  enabled: false
persistence:
  enabled: true
  resourcePolicy: ""
  persistentVolumeClaim:
    registry:
      existingClaim: "harbor-registry"
      storageClass: "harbor-nfs-sc"
      subPath: ""
      accessMode: ReadWriteMany
      size: 5Gi
      annotations: {}
    chartmuseum:
      existingClaim: "harbor-chartmuseum"
      storageClass: "harbor-nfs-sc"
      subPath: ""
      accessMode: ReadWriteMany
      size: 5Gi
      annotations: {}
    jobservice:
      jobLog:
        existingClaim: "harbor-jobservice"
        storageClass: "harbor-nfs-sc"
        subPath: ""
        accessMode: ReadWriteMany
        size: 1Gi
        annotations: {}
      scanDataExports:
        existingClaim: "harbor-jobservice-scandata"
        storageClass: "harbor-nfs-sc"
        subPath: ""
        accessMode: ReadWriteMany
        size: 1Gi
        annotations: {}
    redis:
      existingClaim: "data-harbor-redis-0"
      storageClass: "harbor-nfs-sc"
      subPath: ""
      accessMode: ReadWriteMany
      size: 1Gi
      annotations: {}
    trivy:
      existingClaim: "data-harbor-trivy-0"
      storageClass: "harbor-nfs-sc"
      subPath: ""
      accessMode: ReadWriteMany
      size: 5Gi
      annotations: {}

harborAdminPassword: "Harbor12345"

database:
  type: external
  external:
    host: "192.168.1.10"
    port: "5438"
    username: "root"
    password: "password"
    coreDatabase: "registry" 
    notaryServerDatabase: "notary_server"
    notarySignerDatabase: "notary_signer"
    existingSecret: ""
    sslmode: "disable"
  maxIdleConns: 100
  maxOpenConns: 900
  podAnnotations: {}